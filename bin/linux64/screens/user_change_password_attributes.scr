title = Change/Show Password Attributes for a User
type = form
shortcut = chpasswd
parent = user_mgmt_menu
action = \
  CMD="passwd"
  [ -n "$Change_Password" ] && echo "$Username:$Change_Password" | chpasswd
  [ -n "$Password_Expiry_Days" ] && chage -M "$Password_Expiry_Days" "$Username"
  [ -n "$Warn_Before_Expiry" ] && chage -W "$Warn_Before_Expiry" "$Username"
  [ -n "$Password_Inactive_Days" ] && chage -I "$Password_Inactive_Days" "$Username"
  [ -n "$Account_Expiry_Date" ] && chage -E "$Account_Expiry_Date" "$Username"
  if [ "$Force_Password_Change" = "yes" ]; then chage -d 0 "$Username"; fi
  echo "Updating password attributes..."
  if [ $? -eq 0 ]; then
      echo "Password attributes updated successfully."
  else
      echo "Error updating password attributes."
  fi

caption = User name
name = Username
help = Select the username of the account to modify password attributes.
type = list
values = $(cut -d: -f1 /etc/passwd|sort -t, -k1)
required = yes

caption = Change Password
name = Change_Password
help = Enter a new password for the user. Leave blank to keep the current one.
#type = password
type = input
condition = Username

caption = Password Expiry (Days)
name = Password_Expiry_Days
help = Number of days before the password expires (e.g., 90).
type = input
condition = Username
default = $(chage -l $Username | awk -F: '/Maximum/{print $2}' | xargs)

caption = Warning Before Expiry (Days)
name = Warn_Before_Expiry
help = Number of days before expiration the user is warned.
type = input
condition = Username
default = $(chage -l $Username | awk -F: '/Warning/{print $2}' | xargs)

caption = Password Inactive (Days)
name = Password_Inactive_Days
help = Number of days after expiry before the account is disabled.
type = input
condition = Username
default = $(chage -l $Username | awk -F: '/Inactive/{print $2}' | xargs)

caption = Account Expiry Date
name = Account_Expiry_Date
help = Set the date when the account will be disabled (YYYY-MM-DD).
type = input
condition = Username
default = $(chage -l $Username | awk -F: '/Account expires/{print $2}' | xargs)

caption = Force Password Change on Next Login
name = Force_Password_Change
help = Require the user to change the password at next login.
type = yesno
condition = Username
default = $(if [ $(chage -l $Username | grep "Last password change" | awk -F: '{print $2}' | xargs) = "never" ]; then echo yes; else echo no; fi)
